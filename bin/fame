#!/usr/bin/env ruby

$LOAD_PATH.push File.expand_path('../../lib', __FILE__)

require 'rubygems'
require 'commander'
require 'colorize'
require 'fame/version'
require 'fame/interface_builder'
require 'fame/XLIFF'

#
# The Fame CLI
#
class FameApplication
  include Commander::Methods

  def run
    program :name, 'Fame'
    program :version, Fame::VERSION
    program :description, 'Replace identifiers within Apple Interface Builder files to use nice keys and descriptions for localization.'
    default_command :export

    #
    # Default localize command
    #
    command :export do |c|
      c.syntax = 'fame export [options] project.xcode.project'
      c.description = 'Replaces generated identifiers of the given Interface Builder file(s) and generates .strings files.'
      c.option '--project STRING', String, 'Path to an interface builder file or a folder that contains interface builder files.'
      c.option '--path STRING', String, 'Path to an interface builder file or a folder that contains interface builder files.'

      c.action do |args, options|
        options.default :path => '.'
        raise "Please provide a project file to localize" unless options.project
        raise "The provided project file '#{project}' doesn't exist" unless File.exists?(options.project)

        ib_files = Fame::InterfaceBuilder.determine_ib_files!(options.path)
        puts "Found #{ib_files} to localize".light_black

        # Collect IB nodes for each file
        ib_nodes = ib_files.inject do |all, file|
          ib = Fame::InterfaceBuilder.new(f)
          all + ib.nodes
        end

        # Generate XLIFF translation files
        xliff = Fame::XLIFF.new(options.project)
        xliff.export(options.path, ib_nodes)
      end
    end

    run!
  end
end

# run application
FameApplication.new.run
